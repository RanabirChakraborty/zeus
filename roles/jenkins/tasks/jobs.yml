---
- name: "Ensure jobs defs directory exists: {{ jenkins.jobs_home }}"
  file:
    path: "{{ jenkins.jobs_home }}"
    state: directory
    owner: jenkins
    group: jenkins
    mode: 0755

- name: "Ensure job definitions for mvn builds exists"
  template:
    src: templates/job-mvn-template.yml.j2
    dest: "{{ jenkins.jobs_home }}/{{ item.id }}.yml"
    owner: jenkins
    group: jenkins
    mode: 0644
  loop: "{{ ci_server.jobs }}"
  when:
    - ci_server is defined
    - ci_server.jobs is defined
    - ci_server.jobs | length > 0

- block:
  - name: "Ensure job definitions for component-alignment builds exists"
    template:
      src: templates/job-mvn-template.yml.j2
      dest: "{{ jenkins.jobs_home }}/{{ item.id }}.yml"
      owner: jenkins
      group: jenkins
      mode: 0644
    loop: "{{ component_alignment.jobs }}"

  - name: "Generate configfile for jobs"
    template:
      src: templates/component-alignment-config-template.csv.j2
      dest: "/opt/tools/component-alignment-config-template.csv"
      owner: jenkins
      group: jenkins
      mode: 0644

  when:
    - component_alignment is defined
    - component_alignment.jobs is defined
    - component_alignment.jobs | length > 0

- set_fact:
    path_to_jobs_sync_wrapper: '/opt/tools/podman-jobs-sync.sh'

- name: Copy file with owner and permissions
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: jenkins
    group: jenkins
    mode: '0755'
  loop:
    - { src: 'templates/jobs-sync.sh.j2', dest: '/opt/tools/jobs-sync.sh' }
    - { src: 'podman-jobs-sync.sh.j2', dest: "{{ path_to_jobs_sync_wrapper }}" }

- name: 'Synchronise all jobs'
  command: "runuser -l jenkins -c {{ path_to_jobs_sync_wrapper }}"
  register: jobs_sync_results
  changed_when: False
  when: ovveride_jobs_sync is not defined

- debug:
    msg: "{{ jobs_sync_results.stdout_lines }}"
  when:
    - jobs_sync_results is defined
    - jobs_sync_results.stdout_lines is defined
